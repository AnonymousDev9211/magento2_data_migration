<?php

/**
 * This is the model class for table "url_rewrite".
 *
 * The followings are the available columns in table 'url_rewrite':
 * @property string $url_rewrite_id
 * @property string $entity_type
 * @property string $entity_id
 * @property string $request_path
 * @property string $target_path
 * @property integer $redirect_type
 * @property integer $store_id
 * @property string $description
 * @property integer $is_autogenerated
 * @property string $metadata
 *
 * The followings are the available model relations:
 * @property CatalogUrlRewriteProductCategory[] $catalogUrlRewriteProductCategories
 */
class Mage2UrlRewritePeer extends Mage2ActiveRecord
{
	/**
	 * @return string the associated database table name
	 */
	public function tableName()
	{
		return '{{url_rewrite}}';
	}

	/**
	 * @return array validation rules for model attributes.
	 */
	public function rules()
	{
		// NOTE: you should only define rules for those attributes that
		// will receive user inputs.
		return array(
			array('entity_type, entity_id, store_id', 'required'),
			array('redirect_type, store_id, is_autogenerated', 'numerical', 'integerOnly'=>true),
			array('entity_type', 'length', 'max'=>32),
			array('entity_id', 'length', 'max'=>10),
			array('request_path, target_path, description, metadata', 'length', 'max'=>255),
			// The following rule is used by search().
			// @todo Please remove those attributes that should not be searched.
			array('url_rewrite_id, entity_type, entity_id, request_path, target_path, redirect_type, store_id, description, is_autogenerated, metadata', 'safe', 'on'=>'search'),
		);
	}

	/**
	 * @return array relational rules.
	 */
	public function relations()
	{
		// NOTE: you may need to adjust the relation name and the related
		// class name for the relations automatically generated below.
		return array(
			'catalogUrlRewriteProductCategories' => array(self::HAS_MANY, 'CatalogUrlRewriteProductCategory', 'url_rewrite_id'),
		);
	}

	/**
	 * @return array customized attribute labels (name=>label)
	 */
	public function attributeLabels()
	{
		return array(
			'url_rewrite_id' => 'Url Rewrite',
			'entity_type' => 'Entity Type',
			'entity_id' => 'Entity',
			'request_path' => 'Request Path',
			'target_path' => 'Target Path',
			'redirect_type' => 'Redirect Type',
			'store_id' => 'Store',
			'description' => 'Description',
			'is_autogenerated' => 'Is Autogenerated',
			'metadata' => 'Metadata',
		);
	}

	/**
	 * Retrieves a list of models based on the current search/filter conditions.
	 *
	 * Typical usecase:
	 * - Initialize the model fields with values from filter form.
	 * - Execute this method to get CActiveDataProvider instance which will filter
	 * models according to data in model fields.
	 * - Pass data provider to CGridView, CListView or any similar widget.
	 *
	 * @return CActiveDataProvider the data provider that can return the models
	 * based on the search/filter conditions.
	 */
	public function search()
	{
		// @todo Please modify the following code to remove attributes that should not be searched.

		$criteria=new CDbCriteria;

		$criteria->compare('url_rewrite_id',$this->url_rewrite_id,true);
		$criteria->compare('entity_type',$this->entity_type,true);
		$criteria->compare('entity_id',$this->entity_id,true);
		$criteria->compare('request_path',$this->request_path,true);
		$criteria->compare('target_path',$this->target_path,true);
		$criteria->compare('redirect_type',$this->redirect_type);
		$criteria->compare('store_id',$this->store_id);
		$criteria->compare('description',$this->description,true);
		$criteria->compare('is_autogenerated',$this->is_autogenerated);
		$criteria->compare('metadata',$this->metadata,true);

		return new CActiveDataProvider($this, array(
			'criteria'=>$criteria,
		));
	}

	/**
	 * @return CDbConnection the database connection used for this class
	 */
	public function getDbConnection()
	{
		return Yii::app()->mage2;
	}

	/**
	 * Returns the static model of the specified AR class.
	 * Please note that you should have this exact method in all your CActiveRecord descendants!
	 * @param string $className active record class name.
	 * @return Mage2UrlRewritePeer the static model class
	 */
	public static function model($className=__CLASS__)
	{
		return parent::model($className);
	}
}
